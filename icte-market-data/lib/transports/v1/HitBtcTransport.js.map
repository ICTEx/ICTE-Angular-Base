{"version":3,"sources":["lib.js"],"names":["Object","exports","HitBtcConstant_1","require","MdUtils_1","MdConstant_1","MsgFactory_1","HitBtcProxy_1","HitBtcTransport","_0x1e33db","_0x540336","_0x1ae5f6","_0x366f7a","_0x33139b","_0x5efe80","_0xb64414","_0x41ddbc","_0x353d5e","_0x4b3dc3","_0x3a9949","Math","_0x1e07a0","_0x59505f","_0x374e56","_0x3def08","_0x7c1876","_0x35ba9c","_0x5e520c","_0x460829","_0x18762e","_0xafc2c6","parseFloat","_0x372073","_0x31a660","_0x2f3cac","_0x1504ff"],"mappings":"AAAA,uDAEAA,MAAA,C,gBAAA,EAAsBC,OAAtB,C,YAAA,CAA6C,C,OAAE,C,IAAF,CAA7C,EACA,IAAIC,gBAAA,CAAmBC,OAAA,C,kBAAA,CAAvB,CACA,IAAIC,SAAA,CAAYD,OAAA,C,gBAAA,CAAhB,CACA,IAAIE,YAAA,CAAeF,OAAA,C,mBAAA,CAAnB,CACA,IAAIG,YAAA,CAAeH,OAAA,C,cAAA,CAAnB,CACA,IAAII,aAAA,CAAgBJ,OAAA,C,eAAA,CAApB,CACA,IAAIK,eAAA,CAAiC,UAAY,C,+sFAC7C,SAASC,SAAT,CAAyBC,SAAzB,CAAmC,CAC/B,K,YAAA,E,GAAA,CACA,K,IAAA,EAAUA,SAAV,CAF+B,CAInCD,SAAA,C,WAAA,E,aAAA,EAAwC,UAAY,CAChD,OAAO,K,YAAA,CAAP,CADgD,CAApD,CAGAA,SAAA,C,WAAA,E,SAAA,EAAoC,SAAUE,SAAV,CAAmB,CACnD,K,MAAA,IADmD,CAAvD,CAGAF,SAAA,C,WAAA,E,MAAA,EAAiC,U,iHAC7B,IAAIG,SAAA,CAAQ,IAAZ,C,gpBAQA,K,OAAA,E,IAAA,EAAcV,gBAAA,C,gBAAA,E,YAAA,CAAd,CAA0D,SAAUW,SAAV,CAAgB,EAA1E,E,iBAkBA,K,OAAA,E,OAAA,I,iBAzBA,K,OAAA,EAAa,IAAIN,aAAA,C,aAAA,CAAJ,EAAb,C,iBACA,K,OAAA,E,IAAA,EAAcL,gBAAA,C,gBAAA,E,WAAA,CAAd,CAAyD,SAAUY,SAAV,CAAgB,CACrEF,SAAA,C,YAAA,E,IAAA,CADqE,CAAzE,E,iBAkBA,K,OAAA,E,IAAA,EAAcV,gBAAA,C,gBAAA,E,eAAA,CAAd,CAA6D,SAAUa,SAAV,CAAgBC,SAAhB,CAAsB,CAC/EJ,SAAA,C,UAAA,EAAeG,SAAf,CAAqBC,SAArB,EAD+E,CAAnF,E,iBATA,K,OAAA,E,IAAA,EAAcd,gBAAA,C,gBAAA,E,aAAA,CAAd,CAA2D,SAAUe,SAAV,CAAgBC,SAAhB,C,iHAGvD,IAAIC,SAAA,C,mBAAUC,IAAA,C,OAAA,E,mBAAWF,SAAA,C,KAAA,C,CAAWhB,gBAAA,C,gBAAA,E,KAAA,C,CAAtB,C,CAA6DA,gBAAA,C,gBAAA,E,KAAA,C,CAA3E,C,iBADA,IAAImB,SAAA,CAAQD,IAAA,C,OAAA,EAAWF,SAAA,C,OAAA,EAAahB,gBAAA,C,gBAAA,E,KAAA,CAAxB,EAA+DA,gBAAA,C,gBAAA,E,KAAA,CAA3E,C,iBAGA,IAAIoB,SAAA,C,mBAASF,IAAA,C,OAAA,E,mBAAWF,SAAA,C,QAAA,C,CAAchB,gBAAA,C,gBAAA,E,KAAA,C,CAAzB,C,CAAgEA,gBAAA,C,gBAAA,E,KAAA,C,CAA7E,C,iBAJA,IAAIqB,SAAA,CAAQjB,YAAA,C,YAAA,E,WAAA,CAAZ,C,iBAMAM,SAAA,C,IAAA,E,IAAA,EAAYW,SAAZ,E,iBADAA,SAAA,C,QAAA,EAAanB,SAAA,C,SAAA,E,oBAAA,GAAb,CAAqDc,SAAA,C,UAAA,CAArD,CAAoEE,IAAA,C,OAAA,EAAWC,SAAX,CAApE,CAAuFD,IAAA,C,OAAA,E,mBAAWC,S,KAAA,CAAYnB,gBAAA,C,gBAAA,E,KAAA,CAAvB,CAAvF,CAAoJkB,IAAA,C,OAAA,EAAWD,SAAX,CAApJ,CAAyKC,IAAA,C,OAAA,E,sCAAWD,S,MAAcjB,gBAAA,C,gBAAA,E,KAAA,C,CAAzB,CAAzK,CAAwOkB,IAAA,C,OAAA,EAAWI,SAAX,CAAxO,CAA6PJ,IAAA,C,OAAA,E,mBAAWI,S,KAAA,CAActB,gBAAA,C,gBAAA,E,KAAA,CAAzB,CAA7P,CAA4TG,YAAA,C,YAAA,E,iBAAA,CAA5T,CAAqWa,SAAA,C,OAAA,CAArW,E,iBAFA,IAAIM,SAAA,C,mBAAUJ,IAAA,C,OAAA,EAAWF,SAAA,C,KAAA,EAAWhB,gBAAA,C,gBAAA,E,KAAA,CAAtB,C,CAA6DA,gBAAA,C,gBAAA,E,KAAA,C,CAA3E,C,kBAJJ,E,iBAYA,K,OAAA,E,IAAA,EAAcA,gBAAA,C,gBAAA,E,iBAAA,CAAd,CAA+D,SAAUuB,SAAV,CAAgBC,SAAhB,CAAsB,CACjFd,SAAA,C,UAAA,EAAea,SAAf,CAAqBC,SAArB,EADiF,CAArF,E,iBAlBA,K,OAAA,E,IAAA,EAAcxB,gBAAA,C,gBAAA,E,YAAA,CAAd,CAA0D,SAAUyB,SAAV,CAAgB,CACtEf,SAAA,C,YAAA,E,GAAA,CADsE,CAA1E,E,kBANJ,CA6BAH,SAAA,C,WAAA,E,UAAA,EAAqC,SAAUmB,SAAV,CAAgBC,SAAhB,CAAsB,CACvD,IAAIC,SAAA,C,mBAAWV,IAAA,C,OAAA,E,mBAAWW,UAAA,CAAWF,SAAA,C,KAAA,CAAX,C,CAAuB3B,gBAAA,C,gBAAA,E,KAAA,C,CAAlC,C,CAAyEA,gBAAA,C,gBAAA,E,KAAA,C,CAAxF,CACA,IAAI8B,SAAA,C,mBAAWZ,IAAA,C,OAAA,E,mBAAWW,U,CAAWF,SAAA,C,KAAA,C,CAAX,CAAuB3B,gBAAA,C,gBAAA,E,KAAA,CAAlC,C,CAAyEA,gBAAA,C,gBAAA,E,KAAA,C,CAAxF,CACA,IAAI+B,SAAA,CAAUb,IAAA,C,OAAA,E,mBAAWW,U,CAAWF,SAAA,C,SAAA,C,CAAX,CAA2B3B,gBAAA,C,gBAAA,E,KAAA,CAAtC,EAA6EA,gBAAA,C,gBAAA,E,KAAA,CAA3F,CACA,IAAIgC,SAAA,C,mBAAUd,IAAA,C,OAAA,E,sCAAWW,U,CAAWF,SAAA,C,SAAA,C,EAAgB3B,gBAAA,C,gBAAA,E,KAAA,C,CAAtC,C,CAA6EA,gBAAA,C,gBAAA,E,KAAA,C,CAA3F,CACA,IAAIiC,SAAA,CAAQ7B,YAAA,C,YAAA,E,UAAA,CAAZ,CACA6B,SAAA,C,QAAA,EAAa/B,SAAA,C,SAAA,E,oBAAA,GAAb,CAAqDyB,SAAA,C,UAAA,CAArD,CAAoET,IAAA,C,OAAA,EAAWU,SAAX,CAApE,CAA0FV,IAAA,C,OAAA,E,sCAAWU,S,MAAe5B,gBAAA,C,gBAAA,E,KAAA,C,CAA1B,CAA1F,CAA0JkB,IAAA,C,OAAA,EAAWa,SAAX,CAA1J,CAA+Kb,IAAA,C,OAAA,E,sCAAWa,S,MAAc/B,gBAAA,C,gBAAA,E,KAAA,C,CAAzB,CAA/K,CAA8OkB,IAAA,C,OAAA,EAAWY,SAAX,CAA9O,CAAoQZ,IAAA,C,OAAA,E,mBAAWY,S,KAAA,CAAe9B,gBAAA,C,gBAAA,E,KAAA,CAA1B,CAApQ,CAAoUkB,IAAA,C,OAAA,EAAWc,SAAX,CAApU,CAAyVd,IAAA,C,OAAA,E,mBAAWc,SAAA,C,IAAchC,gBAAA,C,gBAAA,E,KAAA,C,CAAzB,CAAzV,CAAwZG,YAAA,C,YAAA,E,iBAAA,CAAxZ,CAAicwB,SAAA,C,SAAA,CAAjc,EACA,K,IAAA,E,IAAA,EAAWM,SAAX,EAPuD,CAA3D,CASA,OAAO1B,SAAP,CAjD6C,CAAZ,EAArC,CAmDAR,OAAA,C,iBAAA,EAA0BO,eAA1B","sourcesContent":["\"use strict\";\r\n/* Develop by Marco A. Barragan by ICTE */\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nvar HitBtcConstant_1 = require(\"./HitBtcConstant\");\r\nvar MdUtils_1 = require(\"../api/MdUtils\");\r\nvar MdConstant_1 = require(\"../api/MdConstant\");\r\nvar MsgFactory_1 = require(\"./MsgFactory\");\r\nvar HitBtcProxy_1 = require(\"./HitBtcProxy\");\r\nvar HitBtcTransport = /** @class */ (function () {\r\n    function HitBtcTransport(callback) {\r\n        this._connected = false;\r\n        this.cb = callback;\r\n    }\r\n    HitBtcTransport.prototype.isConnected = function () {\r\n        return this._connected;\r\n    };\r\n    HitBtcTransport.prototype.connect = function (symbols) {\r\n        this.init(); //Start connection\r\n    };\r\n    HitBtcTransport.prototype.init = function () {\r\n        var _this = this;\r\n        this.proxy = new HitBtcProxy_1.HitBtcProxy();\r\n        this.proxy.on(HitBtcConstant_1.HitBtcConstant.OPENEVENT, function (data) {\r\n            _this._connected = true;\r\n        });\r\n        this.proxy.on(HitBtcConstant_1.HitBtcConstant.CLOSEEVENT, function (data) {\r\n            _this._connected = false;\r\n        });\r\n        this.proxy.on(HitBtcConstant_1.HitBtcConstant.ERROREVENT, function (data) {\r\n            //TODO: Error system\r\n        });\r\n        this.proxy.on(HitBtcConstant_1.HitBtcConstant.TICKEREVENT, function (pair, data) {\r\n            var cqMsg = MsgFactory_1.MsgFactory.level1Msg;\r\n            var price = Math.trunc(data.price * HitBtcConstant_1.HitBtcConstant.DIV) / HitBtcConstant_1.HitBtcConstant.DIV;\r\n            var bestBid = Math.trunc(data.bid * HitBtcConstant_1.HitBtcConstant.DIV) / HitBtcConstant_1.HitBtcConstant.DIV;\r\n            var bestAsk = Math.trunc(data.ask * HitBtcConstant_1.HitBtcConstant.DIV) / HitBtcConstant_1.HitBtcConstant.DIV;\r\n            var volume = Math.trunc(data.volume * HitBtcConstant_1.HitBtcConstant.DIV) / HitBtcConstant_1.HitBtcConstant.DIV;\r\n            cqMsg.buffer(MdUtils_1.MdUtils.getMsSinceMidnight(), data.symbolId, Math.trunc(price), Math.trunc(price % 1 * HitBtcConstant_1.HitBtcConstant.DIV), Math.trunc(bestBid), Math.trunc(bestBid % 1 * HitBtcConstant_1.HitBtcConstant.DIV), Math.trunc(bestAsk), Math.trunc(bestAsk % 1 * HitBtcConstant_1.HitBtcConstant.DIV), MdConstant_1.MdConstant.HitBtcTransport, data.bench);\r\n            _this.cb.on(cqMsg);\r\n        });\r\n        this.proxy.on(HitBtcConstant_1.HitBtcConstant.SNAPSHOTEVENT, function (pair, data) {\r\n            _this.quoteMsg(pair, data);\r\n        });\r\n        this.proxy.on(HitBtcConstant_1.HitBtcConstant.UPDATEBOOKEVENT, function (pair, data) {\r\n            _this.quoteMsg(pair, data);\r\n        });\r\n        this.proxy.start();\r\n    };\r\n    HitBtcTransport.prototype.quoteMsg = function (pair, data) {\r\n        var bidPrice = Math.trunc(parseFloat(data.bid) * HitBtcConstant_1.HitBtcConstant.DIV) / HitBtcConstant_1.HitBtcConstant.DIV;\r\n        var askPrice = Math.trunc(parseFloat(data.ask) * HitBtcConstant_1.HitBtcConstant.DIV) / HitBtcConstant_1.HitBtcConstant.DIV;\r\n        var bidSize = Math.trunc(parseFloat(data.bidSize) * HitBtcConstant_1.HitBtcConstant.DIV) / HitBtcConstant_1.HitBtcConstant.DIV;\r\n        var askSize = Math.trunc(parseFloat(data.askSize) * HitBtcConstant_1.HitBtcConstant.DIV) / HitBtcConstant_1.HitBtcConstant.DIV;\r\n        var cqMsg = MsgFactory_1.MsgFactory.quoteMsg;\r\n        cqMsg.buffer(MdUtils_1.MdUtils.getMsSinceMidnight(), data.symbolId, Math.trunc(bidPrice), Math.trunc(bidPrice % 1 * HitBtcConstant_1.HitBtcConstant.DIV), Math.trunc(bidSize), Math.trunc(bidSize % 1 * HitBtcConstant_1.HitBtcConstant.DIV), Math.trunc(askPrice), Math.trunc(askPrice % 1 * HitBtcConstant_1.HitBtcConstant.DIV), Math.trunc(askSize), Math.trunc(askSize % 1 * HitBtcConstant_1.HitBtcConstant.DIV), MdConstant_1.MdConstant.HitBtcTransport, data.benchId);\r\n        this.cb.on(cqMsg);\r\n    };\r\n    return HitBtcTransport;\r\n}());\r\nexports.HitBtcTransport = HitBtcTransport;\r\n"]}