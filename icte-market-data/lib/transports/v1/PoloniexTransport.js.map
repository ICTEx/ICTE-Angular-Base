{"version":3,"sources":["lib.js"],"names":["Object","exports","MdConstant_1","require","MsgFactory_1","PoloniexProxy_1","PoloniexConstants_1","PoloniexTransport","_0x28476e","_0x7a7224","_0x1baf90","_0x275abe","_0x5563c1","_0x4854ec","_0x314e57","_0x441ce9","MdConstant","COINS","_0x33f836","_0x5c7391","_0x2fcd78","_0x2ce367","_0x3d4d69","Math","_0x1758a5","_0xbd04a1","_0xce1f17","_0x4c746d","_0x84b2cc","_0x29a4ca","_0x1adb57","_0x5f2fda","_0xe0b397","_0x134132","_0x44bc17","_0x591efb","parseFloat","_0x44d6da","_0x55cb81","_0x10860d","_0x3efc47","_0x2f4141","_0x2c4992","_0xbf0e1d","_0x44d40c","_0x2212ab","_0x1d2c65","_0x4352b0","_0x26bed6","_0x21b76b","_0x5759c6","_0x26f906","Date","_0x2d2721","_0x19097e","_0x12d74f","_0x36c0be","_0x4b5cc4","_0x10131a"],"mappings":"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","sourcesContent":["\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nvar MdConstant_1 = require(\"../api/MdConstant\");\r\nvar MsgFactory_1 = require(\"./MsgFactory\");\r\nvar PoloniexProxy_1 = require(\"./PoloniexProxy\");\r\nvar PoloniexConstants_1 = require(\"./PoloniexConstants\");\r\nvar PoloniexTransport = /** @class */ (function () {\r\n    function PoloniexTransport(callback) {\r\n        var _this = this;\r\n        this.subscriptions = {};\r\n        this._connected = false;\r\n        this.subscribe = function (symbols) {\r\n            var alreadyProcessed = [];\r\n            //Process all the subscription requests\r\n            for (var symbolId = 0; symbolId < MdConstant_1.MdConstant.COINS.length; symbolId++) {\r\n                //construct the other benchmarks\r\n                for (var bnmrk = 0; bnmrk < MdConstant_1.MdConstant.COINS.length; bnmrk++) {\r\n                    var pair = MdConstant_1.MdConstant.COINS[bnmrk] + '_' + MdConstant_1.MdConstant.COINS[symbolId]; //Look for symbol in the constants array\r\n                    //Check if the pair is in the valid pair list for Poloniex\r\n                    if (PoloniexConstants_1.PoloniexConstants.validPairs[pair] != null) {\r\n                        //Create the subscription cache\r\n                        _this.subscriptions[PoloniexConstants_1.PoloniexConstants.validPairs[pair]] = {\r\n                            'symbol': MdConstant_1.MdConstant.COINS[symbolId],\r\n                            'id': symbolId,\r\n                            'price': 0,\r\n                            'benchmark': bnmrk,\r\n                            'bestBid': 0,\r\n                            'bestAsk': 0,\r\n                            'volume': 0\r\n                        };\r\n                    }\r\n                }\r\n            }\r\n        };\r\n        /***\r\n         * Start Poloniex connection and events\r\n         */\r\n        this.init = function () {\r\n            _this.poloniex = new PoloniexProxy_1.PoloniexProxy();\r\n            /**\r\n             * Trade Event\r\n             */\r\n            _this.poloniex.on(PoloniexConstants_1.PoloniexConstants.TRADEEVENT, function (cid, sequence, message) {\r\n                var side = message[1];\r\n                if (_this.subscriptions[cid] != null) {\r\n                    var price = Math.trunc(message[3] * PoloniexConstants_1.PoloniexConstants.DIV) / PoloniexConstants_1.PoloniexConstants.DIV;\r\n                    var size = Math.trunc(message[2] * PoloniexConstants_1.PoloniexConstants.DIV) / PoloniexConstants_1.PoloniexConstants.DIV;\r\n                    if (side === PoloniexConstants_1.PoloniexConstants.BUY) {\r\n                        var cqMsg = MsgFactory_1.MsgFactory.buyMsg;\r\n                        cqMsg.buffer(PoloniexTransport.getMsSinceMidnight(), _this.subscriptions[cid].id, Math.trunc(price), Math.trunc(price % 1 * PoloniexConstants_1.PoloniexConstants.DIV), Math.trunc(size), Math.trunc(size % 1 * PoloniexConstants_1.PoloniexConstants.DIV), Math.trunc(_this.subscriptions[cid].volume), Math.trunc(_this.subscriptions[cid].volume % 1 * PoloniexConstants_1.PoloniexConstants.DIV), MdConstant_1.MdConstant.PoloniexTransport, _this.subscriptions[cid].benchmark);\r\n                        _this.cb.on(cqMsg);\r\n                    }\r\n                    else { /* Sell */\r\n                        var cqMsg = MsgFactory_1.MsgFactory.sellMsg;\r\n                        cqMsg.buffer(PoloniexTransport.getMsSinceMidnight(), _this.subscriptions[cid].id, Math.trunc(price), Math.trunc(price % 1 * PoloniexConstants_1.PoloniexConstants.DIV), Math.trunc(size), Math.trunc(size % 1 * PoloniexConstants_1.PoloniexConstants.DIV), Math.trunc(_this.subscriptions[cid].volume), Math.trunc(_this.subscriptions[cid].volume % 1 * PoloniexConstants_1.PoloniexConstants.DIV), MdConstant_1.MdConstant.PoloniexTransport, _this.subscriptions[cid].benchmark);\r\n                        _this.cb.on(cqMsg);\r\n                    }\r\n                }\r\n            });\r\n            /**\r\n             * Snapshot Event\r\n             */\r\n            _this.poloniex.on(PoloniexConstants_1.PoloniexConstants.QUOTEEVENT, function (cid, sequence, message) {\r\n                if (_this.subscriptions[cid] != null) {\r\n                    /** Level 1 Information **/\r\n                    var bidPriceStr = Object.keys(message[0].orderBook[1])[0];\r\n                    var bidSize = message[0].orderBook[1][bidPriceStr];\r\n                    var askPriceStr = Object.keys(message[0].orderBook[0])[0];\r\n                    var askSize = message[0].orderBook[0][askPriceStr];\r\n                    var bidPrice = Math.trunc(parseFloat(bidPriceStr) * PoloniexConstants_1.PoloniexConstants.DIV) / PoloniexConstants_1.PoloniexConstants.DIV;\r\n                    var askPrice = Math.trunc(parseFloat(askPriceStr) * PoloniexConstants_1.PoloniexConstants.DIV) / PoloniexConstants_1.PoloniexConstants.DIV;\r\n                    var cqMsg = MsgFactory_1.MsgFactory.quoteMsg;\r\n                    cqMsg.buffer(PoloniexTransport.getMsSinceMidnight(), _this.subscriptions[cid].id, Math.trunc(bidPrice), Math.trunc(bidPrice % 1 * PoloniexConstants_1.PoloniexConstants.DIV), Math.trunc(bidSize), Math.trunc(bidSize % 1 * PoloniexConstants_1.PoloniexConstants.DIV), Math.trunc(askPrice), Math.trunc(askPrice % 1 * PoloniexConstants_1.PoloniexConstants.DIV), Math.trunc(askSize), Math.trunc(askSize % 1 * PoloniexConstants_1.PoloniexConstants.DIV), MdConstant_1.MdConstant.PoloniexTransport, _this.subscriptions[cid].benchmark);\r\n                    _this.cb.on(cqMsg);\r\n                }\r\n            });\r\n            /**\r\n             * Bid and Ask events\r\n             */\r\n            _this.poloniex.on(PoloniexConstants_1.PoloniexConstants.ORDEREVENT, function (cid, sequence, message) {\r\n                if (_this.subscriptions[cid] != null) {\r\n                    var msgType = message[2] === PoloniexConstants_1.PoloniexConstants.AMOUNT_ZERO ? 1 /* Remove */ : 0 /* Modify */;\r\n                    if (msgType === 0) {\r\n                        var side = message[0];\r\n                        var rate = Math.trunc(message[1] * PoloniexConstants_1.PoloniexConstants.DIV) / PoloniexConstants_1.PoloniexConstants.DIV;\r\n                        var size = Math.trunc(message[2] * PoloniexConstants_1.PoloniexConstants.DIV) / PoloniexConstants_1.PoloniexConstants.DIV;\r\n                        if (side === PoloniexConstants_1.PoloniexConstants.BID) {\r\n                            if (rate > _this.subscriptions[cid].bestBid) {\r\n                                var cqMsg = MsgFactory_1.MsgFactory.bidMsg;\r\n                                _this.subscriptions[cid].bestBid = rate;\r\n                                cqMsg.buffer(PoloniexTransport.getMsSinceMidnight(), _this.subscriptions[cid].id, Math.trunc(rate), Math.trunc(rate % 1 * PoloniexConstants_1.PoloniexConstants.DIV), Math.trunc(size), Math.trunc(size % 1 * PoloniexConstants_1.PoloniexConstants.DIV), Math.trunc(_this.subscriptions[cid].volume), Math.trunc(_this.subscriptions[cid].volume % 1 * PoloniexConstants_1.PoloniexConstants.DIV), MdConstant_1.MdConstant.PoloniexTransport, _this.subscriptions[cid].benchmark);\r\n                                _this.cb.on(cqMsg);\r\n                            }\r\n                        }\r\n                        else { /* Ask */\r\n                            if (rate < _this.subscriptions[cid].bestAsk) {\r\n                                var cqMsg = MsgFactory_1.MsgFactory.askMsg;\r\n                                _this.subscriptions[cid].bestAsk = rate;\r\n                                cqMsg.buffer(PoloniexTransport.getMsSinceMidnight(), _this.subscriptions[cid].id, Math.trunc(rate), Math.trunc(rate % 1 * PoloniexConstants_1.PoloniexConstants.DIV), Math.trunc(size), Math.trunc(size % 1 * PoloniexConstants_1.PoloniexConstants.DIV), Math.trunc(_this.subscriptions[cid].volume), Math.trunc(_this.subscriptions[cid].volume % 1 * PoloniexConstants_1.PoloniexConstants.DIV), MdConstant_1.MdConstant.PoloniexTransport, _this.subscriptions[cid].benchmark);\r\n                                _this.cb.on(cqMsg);\r\n                            }\r\n                        }\r\n                    }\r\n                }\r\n            });\r\n            /**\r\n             * Quotes Event\r\n             */\r\n            _this.poloniex.on(PoloniexConstants_1.PoloniexConstants.TICKEREVENT, function (cid, message) {\r\n                if (_this.subscriptions[cid] != null) {\r\n                    var cqMsg = MsgFactory_1.MsgFactory.level1Msg;\r\n                    _this.subscriptions[cid].price = Math.trunc(message[1] * PoloniexConstants_1.PoloniexConstants.DIV) / PoloniexConstants_1.PoloniexConstants.DIV;\r\n                    _this.subscriptions[cid].bestBid = Math.trunc(message[3] * PoloniexConstants_1.PoloniexConstants.DIV) / PoloniexConstants_1.PoloniexConstants.DIV;\r\n                    _this.subscriptions[cid].bestAsk = Math.trunc(message[2] * PoloniexConstants_1.PoloniexConstants.DIV) / PoloniexConstants_1.PoloniexConstants.DIV;\r\n                    _this.subscriptions[cid].volume = Math.trunc(message[6] * PoloniexConstants_1.PoloniexConstants.DIV) / PoloniexConstants_1.PoloniexConstants.DIV;\r\n                    cqMsg.buffer(PoloniexTransport.getMsSinceMidnight(), _this.subscriptions[cid].id, Math.trunc(_this.subscriptions[cid].price), Math.trunc(_this.subscriptions[cid].price % 1 * PoloniexConstants_1.PoloniexConstants.DIV), Math.trunc(_this.subscriptions[cid].bestBid), Math.trunc(_this.subscriptions[cid].bestBid % 1 * PoloniexConstants_1.PoloniexConstants.DIV), Math.trunc(_this.subscriptions[cid].bestAsk), Math.trunc(_this.subscriptions[cid].bestAsk % 1 * PoloniexConstants_1.PoloniexConstants.DIV), MdConstant_1.MdConstant.PoloniexTransport, _this.subscriptions[cid].benchmark);\r\n                    _this.cb.on(cqMsg);\r\n                }\r\n            });\r\n            _this.poloniex.on(PoloniexConstants_1.PoloniexConstants.ERROREVENT, function (message) {\r\n                //TODO: Error system\r\n            });\r\n            _this.poloniex.on(PoloniexConstants_1.PoloniexConstants.CLOSEEVENT, function (message) {\r\n                _this._connected = false;\r\n            });\r\n            _this.poloniex.on(PoloniexConstants_1.PoloniexConstants.OPENEVENT, function (message) {\r\n                _this._connected = true;\r\n            });\r\n        };\r\n        this.cb = callback;\r\n    }\r\n    //Return the number of seconds sinsce midnight\r\n    PoloniexTransport.getMsSinceMidnight = function () {\r\n        return this.getGmtZeroNow() - this.getGmtZeroMidnight();\r\n    };\r\n    PoloniexTransport.getGmtZeroNow = function () {\r\n        var d = new Date();\r\n        var z = d.getTime() + (d.getTimezoneOffset() * 60000);\r\n        var zd = new Date(z);\r\n        return zd.getTime();\r\n    };\r\n    PoloniexTransport.getGmtZeroMidnight = function () {\r\n        var d = new Date();\r\n        var z = d.getTime() + (d.getTimezoneOffset() * 60000);\r\n        var zd = new Date(z);\r\n        zd.setHours(0);\r\n        zd.setMinutes(0);\r\n        zd.setSeconds(0);\r\n        zd.setMilliseconds(0);\r\n        return zd.getTime();\r\n    };\r\n    PoloniexTransport.prototype.isConnected = function () {\r\n        return this._connected;\r\n    };\r\n    /***\r\n     * Connect to Poloniex Transport\r\n     * @param symbols\r\n     */\r\n    PoloniexTransport.prototype.connect = function (symbols) {\r\n        this.subscribe(symbols); //Subscribe the symbols\r\n        this.init(); //Start connection\r\n    };\r\n    return PoloniexTransport;\r\n}());\r\nexports.PoloniexTransport = PoloniexTransport;\r\n"]}