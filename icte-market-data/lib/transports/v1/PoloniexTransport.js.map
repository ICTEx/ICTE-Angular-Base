{"version":3,"sources":["lib.js"],"names":["Object","exports","MdConstant_1","require","MsgFactory_1","PoloniexProxy_1","PoloniexConstants_1","PoloniexTransport","_0x3d9a32","_0x54babf","_0x253bc0","_0x5661e4","_0x5e313f","_0x7c8039","_0x1595b3","_0x52f78b","MdConstant","COINS","_0x10c442","_0x57980f","_0x484b56","_0x5c91f0","Math","_0x484d74","_0x59e463","_0x23b0f7","_0x3522bb","_0x473bac","_0x51438d","_0x379952","_0x365f22","parseFloat","_0x197e55","_0x2d5c95","_0xe4cae6","_0x5cb0fa","_0xff220d","_0x3d9408","_0x1870c1","_0x5d83c6","_0x4ebea8","_0x51b732","_0xbc607f","_0x3a57c0","_0x366d7c","_0x4491dc","_0x5052af","_0x3e6a68","_0x598929","_0x4597b3","_0x57bca5","_0x6f8d68","Date","_0x51c5bc","_0x3a5647","_0x579177","_0x3a3561","_0x5daaac","_0x90e210"],"mappings":"AAAA,aACAA,MAAA,C,gBAAA,EAAsBC,OAAtB,C,YAAA,CAA6C,C,OAAE,C,IAAF,CAA7C,EACA,IAAIC,YAAA,CAAeC,OAAA,C,mBAAA,CAAnB,CACA,IAAIC,YAAA,CAAeD,OAAA,C,cAAA,CAAnB,CACA,IAAIE,eAAA,CAAkBF,OAAA,C,iBAAA,CAAtB,CACA,IAAIG,mBAAA,CAAsBH,OAAA,C,qBAAA,CAA1B,CACA,IAAII,iBAAA,CAAmC,UAAY,C,koGAC/C,SAASC,SAAT,CAA2BC,SAA3B,CAAqC,C,m/BACjC,IAAIC,SAAA,CAAQ,IAAZ,CACA,K,eAAA,EAAqB,EAArB,CACA,K,YAAA,E,GAAA,CACA,K,WAAA,EAAiB,SAAUC,SAAV,CAAmB,CAChC,IAAIC,SAAA,CAAmB,EAAvB,CAEA,IAAK,IAAIC,SAAA,C,GAAJ,C,mBAAkBA,S,CAAWX,YAAA,C,YAAA,E,OAAA,E,QAAA,C,CAAlC,CAAwEW,SAAA,EAAxE,CAAoF,CAEhF,IAAK,IAAIC,SAAA,C,GAAJ,C,mBAAeA,S,CAAQZ,YAAA,C,YAAA,E,OAAA,E,QAAA,C,CAA5B,CAAkEY,SAAA,EAAlE,CAA2E,CACvE,IAAIC,SAAA,C,mBAAOb,YAAA,C,YAAA,E,OAAA,EAA8BY,SAA9B,C,KAAA,CAA6CZ,YAAA,C,YAAA,E,OAAA,EAA8BW,SAA9B,CAAxD,CAEA,GAAIP,mBAAA,C,mBAAA,E,YAAA,EAAiDS,SAAjD,GAA0D,IAA9D,CAAoE,CAEhEL,SAAA,C,eAAA,EAAoBJ,mBAAA,C,mBAAA,E,YAAA,EAAiDS,SAAjD,CAApB,EAA8E,EAA9E,CAAAL,SAAA,C,eAAA,EAAoBJ,mBAAA,C,mBAAA,E,YAAA,EAAiDS,SAAjD,CAApB,C,WACcb,YAAA,CAAac,UAAb,CAAwBC,KAAxB,CAA8BJ,SAA9B,C,CADdH,SAAA,C,eAAA,EAAoBJ,mBAAA,C,mBAAA,E,YAAA,EAAiDS,SAAjD,CAApB,C,OAEUF,S,CAFVH,SAAA,C,eAAA,EAAoBJ,mBAAA,C,mBAAA,E,YAAA,EAAiDS,SAAjD,CAApB,C,cAAAL,SAAA,C,eAAA,EAAoBJ,mBAAA,C,mBAAA,E,YAAA,EAAiDS,SAAjD,CAApB,C,cAIiBD,S,CAJjBJ,SAAA,C,eAAA,EAAoBJ,mBAAA,C,mBAAA,E,YAAA,EAAiDS,SAAjD,CAApB,C,gBAAAL,SAAA,C,eAAA,EAAoBJ,mBAAA,C,mBAAA,E,YAAA,EAAiDS,SAAjD,CAApB,C,gBAAAL,SAAA,C,eAAA,EAAoBJ,mBAAA,C,mBAAA,E,YAAA,EAAiDS,SAAjD,CAApB,C,eAFgE,CAHG,CAFK,CAHpD,CAApC,CA0BA,K,MAAA,EAAY,U,iHACRL,SAAA,C,UAAA,EAAiB,IAAIL,eAAA,C,eAAA,CAAJ,EAAjB,C,iBAoFAK,SAAA,C,UAAA,E,IAAA,EAAkBJ,mBAAA,C,mBAAA,E,YAAA,CAAlB,CAAoE,SAAUY,SAAV,CAAmB,CACnFR,SAAA,C,YAAA,E,GAAA,CADmF,CAAvF,E,iBAdAA,SAAA,C,UAAA,E,IAAA,EAAkBJ,mBAAA,C,mBAAA,E,aAAA,CAAlB,CAAqE,SAAUa,SAAV,CAAeC,SAAf,CAAwB,CACzF,G,mBAAIV,SAAA,C,eAAA,EAAoBS,SAApB,C,CAA4B,I,CAAhC,C,iHAOIT,SAAA,C,IAAA,E,IAAA,EAAYW,SAAZ,E,iBALAX,SAAA,C,eAAA,EAAoBS,SAApB,E,OAAA,EAAiCC,SAAA,C,GAAA,CAAjC,C,iBACAV,SAAA,C,eAAA,EAAoBS,SAApB,E,SAAA,EAAmCC,SAAA,C,GAAA,CAAnC,C,iBACAV,SAAA,C,eAAA,EAAoBS,SAApB,E,SAAA,EAAmCC,SAAA,C,GAAA,CAAnC,C,iBACAV,SAAA,C,eAAA,EAAoBS,SAApB,E,QAAA,EAAkCC,SAAA,C,GAAA,CAAlC,C,iBAJA,IAAIC,SAAA,CAAQjB,YAAA,C,YAAA,E,WAAA,CAAZ,C,iBAKAiB,SAAA,C,QAAA,EAAab,SAAA,C,oBAAA,GAAb,CAAqDE,SAAA,C,eAAA,EAAoBS,SAApB,E,IAAA,CAArD,CAAkFG,IAAA,C,OAAA,EAAWZ,SAAA,C,eAAA,EAAoBS,SAApB,E,OAAA,CAAX,CAAlF,CAA8HG,IAAA,C,OAAA,E,mBAAWZ,SAAA,C,eAAA,EAAoBS,SAApB,E,OAAA,C,KAAA,C,QAAX,CAA9H,CAAyLG,IAAA,C,OAAA,EAAWZ,SAAA,C,eAAA,EAAoBS,SAApB,E,SAAA,CAAX,CAAzL,CAAuOG,IAAA,C,OAAA,E,mBAAWZ,SAAA,C,eAAA,EAAoBS,SAApB,E,SAAA,E,aAAX,CAAvO,CAAoSG,IAAA,C,OAAA,EAAWZ,SAAA,C,eAAA,EAAoBS,SAApB,E,SAAA,CAAX,CAApS,CAAkVG,IAAA,C,OAAA,E,sCAAWZ,SAAA,C,eAAA,EAAoBS,SAApB,E,SAAA,C,eAAX,CAAlV,CAA+YjB,YAAA,C,YAAA,E,mBAAA,CAA/Y,CAA0bQ,SAAA,C,eAAA,EAAoBS,SAApB,E,WAAA,CAA1b,E,kBAPqF,CAA7F,E,wlDA9CAT,SAAA,C,UAAA,E,IAAA,EAAkBJ,mBAAA,C,mBAAA,E,YAAA,CAAlB,CAAoE,SAAUiB,SAAV,CAAeC,SAAf,CAAyBC,SAAzB,CAAkC,CAClG,G,mBAAIf,SAAA,C,eAAA,EAAoBa,SAApB,C,CAA4B,I,CAAhC,C,iHAQI,IAAIG,SAAA,CAAQtB,YAAA,C,YAAA,E,UAAA,CAAZ,C,iBACAsB,SAAA,C,QAAA,EAAalB,SAAA,C,oBAAA,GAAb,CAAqDE,SAAA,C,eAAA,EAAoBa,SAApB,E,IAAA,CAArD,CAAkFD,IAAA,C,OAAA,EAAWK,SAAX,CAAlF,CAAwGL,IAAA,C,OAAA,E,sCAAWK,S,eAAX,CAAxG,CAA6IL,IAAA,C,OAAA,EAAWM,SAAX,CAA7I,CAAkKN,IAAA,C,OAAA,E,sCAAWM,S,eAAX,CAAlK,CAAsMN,IAAA,C,OAAA,EAAWO,SAAX,CAAtM,CAA4NP,IAAA,C,OAAA,E,mBAAWO,SAAA,C,aAAX,CAA5N,CAAiQP,IAAA,C,OAAA,EAAWQ,SAAX,CAAjQ,CAAsRR,IAAA,C,OAAA,E,sCAAWQ,S,eAAX,CAAtR,CAA0T5B,YAAA,C,YAAA,E,mBAAA,CAA1T,CAAqWQ,SAAA,C,eAAA,EAAoBa,SAApB,E,WAAA,CAArW,E,iBAFA,IAAIM,SAAA,CAAWE,UAAA,CAAWC,SAAX,CAAf,C,iBAHA,IAAIA,SAAA,CAAchC,MAAA,C,MAAA,EAAYyB,SAAA,C,GAAA,E,WAAA,E,GAAA,CAAZ,E,GAAA,CAAlB,C,iBAEA,IAAIE,SAAA,C,mBAAWI,U,CAAWE,S,CAA1B,C,iBADA,IAAIH,SAAA,CAAUL,SAAA,C,GAAA,E,WAAA,E,GAAA,EAAwBO,SAAxB,CAAd,C,iBAFA,IAAIJ,SAAA,CAAUH,SAAA,C,GAAA,E,WAAA,E,GAAA,EAAwBQ,SAAxB,CAAd,C,iBAOAvB,SAAA,C,IAAA,E,IAAA,EAAYgB,SAAZ,E,iBARA,IAAIO,SAAA,CAAcjC,MAAA,C,MAAA,EAAYyB,SAAA,C,GAAA,E,WAAA,E,GAAA,CAAZ,E,GAAA,CAAlB,C,kBAH8F,CAAtG,E,iBAiBAf,SAAA,C,UAAA,E,IAAA,EAAkBJ,mBAAA,C,mBAAA,E,YAAA,CAAlB,CAAoE,SAAU4B,SAAV,CAAeC,SAAf,CAAyBC,SAAzB,CAAkC,CAClG,G,mBAAI1B,SAAA,C,eAAA,EAAoBwB,SAApB,C,CAA4B,I,CAAhC,CAAsC,CAClC,IAAIG,SAAA,CAAUD,SAAA,C,GAAA,IAAe9B,mBAAA,C,mBAAA,E,aAAA,CAAf,C,GAAA,C,GAAd,CACA,G,mBAAI+B,S,KAAJ,CAAmB,CACf,IAAIC,SAAA,CAAOF,SAAA,C,GAAA,CAAX,CACA,IAAIG,SAAA,CAAOH,SAAA,C,GAAA,CAAX,CACA,IAAII,SAAA,CAAOJ,SAAA,C,GAAA,CAAX,CACA,GAAIE,SAAA,GAAShC,mBAAA,C,mBAAA,E,KAAA,CAAb,CAAwD,CACpD,G,mBAAIiC,S,CAAO7B,SAAA,C,eAAA,EAAoBwB,SAApB,E,SAAA,C,CAAX,CAA6C,CACzC,IAAIO,SAAA,CAAQrC,YAAA,C,YAAA,E,QAAA,CAAZ,CACAM,SAAA,C,eAAA,EAAoBwB,SAApB,E,SAAA,EAAmCK,SAAnC,CACAE,SAAA,C,QAAA,EAAajC,SAAA,C,oBAAA,GAAb,CAAqDE,SAAA,C,eAAA,EAAoBwB,SAApB,E,IAAA,CAArD,CAAkFZ,IAAA,C,OAAA,EAAWiB,SAAX,CAAlF,CAAoGjB,IAAA,C,OAAA,E,mBAAWiB,SAAA,C,aAAX,CAApG,CAAqIjB,IAAA,C,OAAA,EAAWkB,SAAX,CAArI,CAAuJlB,IAAA,C,OAAA,E,sCAAWkB,S,eAAX,CAAvJ,CAAwLlB,IAAA,C,OAAA,EAAWZ,SAAA,C,eAAA,EAAoBwB,SAApB,E,QAAA,CAAX,CAAxL,CAAqOZ,IAAA,C,OAAA,E,sCAAWZ,SAAA,C,eAAA,EAAoBwB,SAApB,E,QAAA,C,eAAX,CAArO,CAAiShC,YAAA,C,YAAA,E,mBAAA,CAAjS,CAA4UQ,SAAA,C,eAAA,EAAoBwB,SAApB,E,WAAA,CAA5U,EACAxB,SAAA,C,IAAA,E,IAAA,EAAY+B,SAAZ,EAJyC,CADO,CAAxD,IAQK,CACD,G,mBAAIF,S,CAAO7B,SAAA,C,eAAA,EAAoBwB,SAApB,E,SAAA,C,CAAX,CAA6C,CACzC,IAAIO,SAAA,CAAQrC,YAAA,C,YAAA,E,QAAA,CAAZ,CACAM,SAAA,C,eAAA,EAAoBwB,SAApB,E,SAAA,EAAmCK,SAAnC,CACAE,SAAA,C,QAAA,EAAajC,SAAA,C,oBAAA,GAAb,CAAqDE,SAAA,C,eAAA,EAAoBwB,SAApB,E,IAAA,CAArD,CAAkFZ,IAAA,C,OAAA,EAAWiB,SAAX,CAAlF,CAAoGjB,IAAA,C,OAAA,E,sCAAWiB,S,eAAX,CAApG,CAAqIjB,IAAA,C,OAAA,EAAWkB,SAAX,CAArI,CAAuJlB,IAAA,C,OAAA,E,sCAAWkB,S,eAAX,CAAvJ,CAAwLlB,IAAA,C,OAAA,EAAWZ,SAAA,C,eAAA,EAAoBwB,SAApB,E,QAAA,CAAX,CAAxL,CAAqOZ,IAAA,C,OAAA,E,sCAAWZ,SAAA,C,eAAA,EAAoBwB,SAApB,E,QAAA,C,eAAX,CAArO,CAAiShC,YAAA,C,YAAA,E,mBAAA,CAAjS,CAA4UQ,SAAA,C,eAAA,EAAoBwB,SAApB,E,WAAA,CAA5U,EACAxB,SAAA,C,IAAA,E,IAAA,EAAY+B,SAAZ,EAJyC,CAD5C,CAZU,CAFe,CAD4D,CAAtG,E,iBArCA/B,SAAA,C,UAAA,E,IAAA,EAAkBJ,mBAAA,C,mBAAA,E,YAAA,CAAlB,CAAoE,SAAUoC,SAAV,CAAeC,SAAf,CAAyBC,SAAzB,CAAkC,CAClG,IAAIC,SAAA,CAAOD,SAAA,C,GAAA,CAAX,CACA,GAAIlC,SAAA,C,eAAA,EAAoBgC,SAApB,GAA4B,IAAhC,CAAsC,CAClC,IAAII,SAAA,CAAQF,SAAA,C,GAAA,CAAZ,CACA,IAAIG,SAAA,CAAOH,SAAA,C,GAAA,CAAX,CACA,G,mBAAIC,S,CAASvC,mBAAA,C,mBAAA,E,KAAA,C,CAAb,CAAwD,CACpD,IAAI0C,SAAA,CAAQ5C,YAAA,C,YAAA,E,QAAA,CAAZ,CACA4C,SAAA,C,QAAA,EAAaxC,SAAA,C,oBAAA,GAAb,CAAqDE,SAAA,C,eAAA,EAAoBgC,SAApB,E,IAAA,CAArD,CAAkFpB,IAAA,C,OAAA,EAAWwB,SAAX,CAAlF,CAAqGxB,IAAA,C,OAAA,E,mBAAWwB,SAAA,C,aAAX,CAArG,CAAuIxB,IAAA,C,OAAA,EAAWyB,SAAX,CAAvI,CAAyJzB,IAAA,C,OAAA,E,sCAAWyB,S,eAAX,CAAzJ,CAA0LzB,IAAA,C,OAAA,EAAWZ,SAAA,C,eAAA,EAAoBgC,SAApB,E,QAAA,CAAX,CAA1L,CAAuOpB,IAAA,C,OAAA,E,mBAAWZ,SAAA,C,eAAA,EAAoBgC,SAApB,E,QAAA,E,aAAX,CAAvO,CAAmSxC,YAAA,C,YAAA,E,mBAAA,CAAnS,CAA8UQ,SAAA,C,eAAA,EAAoBgC,SAApB,E,WAAA,CAA9U,EACAhC,SAAA,C,IAAA,E,IAAA,EAAYsC,SAAZ,EAHoD,CAAxD,IAKK,CACD,IAAIA,SAAA,CAAQ5C,YAAA,C,YAAA,E,SAAA,CAAZ,CACA4C,SAAA,C,QAAA,EAAaxC,SAAA,C,oBAAA,GAAb,CAAqDE,SAAA,C,eAAA,EAAoBgC,SAApB,E,IAAA,CAArD,CAAkFpB,IAAA,C,OAAA,EAAWwB,SAAX,CAAlF,CAAqGxB,IAAA,C,OAAA,E,sCAAWwB,S,eAAX,CAArG,CAAuIxB,IAAA,C,OAAA,EAAWyB,SAAX,CAAvI,CAAyJzB,IAAA,C,OAAA,E,mBAAWyB,SAAA,C,aAAX,CAAzJ,CAA0LzB,IAAA,C,OAAA,EAAWZ,SAAA,C,eAAA,EAAoBgC,SAApB,E,QAAA,CAAX,CAA1L,CAAuOpB,IAAA,C,OAAA,E,sCAAWZ,SAAA,C,eAAA,EAAoBgC,SAApB,E,QAAA,C,eAAX,CAAvO,CAAmSxC,YAAA,C,YAAA,E,mBAAA,CAAnS,CAA8UQ,SAAA,C,eAAA,EAAoBgC,SAApB,E,WAAA,CAA9U,EACAhC,SAAA,C,IAAA,E,IAAA,EAAYsC,SAAZ,EAHC,CAR6B,CAF4D,CAAtG,E,iBAoFAtC,SAAA,C,UAAA,E,IAAA,EAAkBJ,mBAAA,C,mBAAA,E,WAAA,CAAlB,CAAmE,SAAU2C,SAAV,CAAmB,CAClFvC,SAAA,C,YAAA,E,IAAA,CADkF,CAAtF,E,iBAPAA,SAAA,C,UAAA,E,IAAA,EAAkBJ,mBAAA,C,mBAAA,E,YAAA,CAAlB,CAAoE,SAAU4C,SAAV,CAAmB,EAAvF,E,kBAlFJ,CA8FA,K,IAAA,EAAUzC,SAAV,CA5HiC,CA+HrCD,SAAA,C,oBAAA,EAAuC,UAAY,CAC/C,O,mBAAO,K,eAAA,G,CAAuB,K,oBAAA,G,CAA9B,CAD+C,CAAnD,CAGAA,SAAA,C,eAAA,EAAkC,UAAY,CAC1C,IAAI2C,SAAA,CAAI,IAAIC,IAAJ,EAAR,CACA,IAAIC,SAAA,C,mBAAIF,SAAA,C,SAAA,G,oBAAeA,SAAA,C,mBAAA,G,SAAvB,CACA,IAAIG,SAAA,CAAK,IAAIF,IAAJ,CAASC,SAAT,CAAT,CACA,OAAOC,SAAA,C,SAAA,GAAP,CAJ0C,CAA9C,CAMA9C,SAAA,C,oBAAA,EAAuC,UAAY,CAC/C,IAAI+C,SAAA,CAAI,IAAIH,IAAJ,EAAR,CACA,IAAII,SAAA,C,mBAAID,SAAA,C,SAAA,G,CAAeA,SAAA,C,mBAAA,I,OAAvB,CACA,IAAIE,SAAA,CAAK,IAAIL,IAAJ,CAASI,SAAT,CAAT,CACAC,SAAA,C,UAAA,E,GAAA,EACAA,SAAA,C,YAAA,E,GAAA,EACAA,SAAA,C,YAAA,E,GAAA,EACAA,SAAA,C,iBAAA,E,GAAA,EACA,OAAOA,SAAA,C,SAAA,GAAP,CAR+C,CAAnD,CAUAjD,SAAA,C,WAAA,E,aAAA,EAA0C,UAAY,CAClD,OAAO,K,YAAA,CAAP,CADkD,CAAtD,CAOAA,SAAA,C,WAAA,E,SAAA,EAAsC,SAAUkD,SAAV,CAAmB,CACrD,K,WAAA,EAAeA,SAAf,EACA,K,MAAA,IAFqD,CAAzD,CAIA,OAAOlD,SAAP,CA9J+C,CAAZ,EAAvC,CAgKAP,OAAA,C,mBAAA,EAA4BM,iBAA5B","sourcesContent":["\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nvar MdConstant_1 = require(\"../api/MdConstant\");\r\nvar MsgFactory_1 = require(\"./MsgFactory\");\r\nvar PoloniexProxy_1 = require(\"./PoloniexProxy\");\r\nvar PoloniexConstants_1 = require(\"./PoloniexConstants\");\r\nvar PoloniexTransport = /** @class */ (function () {\r\n    function PoloniexTransport(callback) {\r\n        var _this = this;\r\n        this.subscriptions = {};\r\n        this._connected = false;\r\n        this.subscribe = function (symbols) {\r\n            var alreadyProcessed = [];\r\n            //Process all the subscription requests\r\n            for (var symbolId = 0; symbolId < MdConstant_1.MdConstant.COINS.length; symbolId++) {\r\n                //construct the other benchmarks\r\n                for (var bnmrk = 0; bnmrk < MdConstant_1.MdConstant.COINS.length; bnmrk++) {\r\n                    var pair = MdConstant_1.MdConstant.COINS[bnmrk] + '_' + MdConstant_1.MdConstant.COINS[symbolId]; //Look for symbol in the constants array\r\n                    //Check if the pair is in the valid pair list for Poloniex\r\n                    if (PoloniexConstants_1.PoloniexConstants.validPairs[pair] != null) {\r\n                        //Create the subscription cache\r\n                        _this.subscriptions[PoloniexConstants_1.PoloniexConstants.validPairs[pair]] = {\r\n                            'symbol': MdConstant_1.MdConstant.COINS[symbolId],\r\n                            'id': symbolId,\r\n                            'price': 0,\r\n                            'benchmark': bnmrk,\r\n                            'bestBid': 0,\r\n                            'bestAsk': 0,\r\n                            'volume': 0\r\n                        };\r\n                    }\r\n                }\r\n            }\r\n        };\r\n        /***\r\n         * Start Poloniex connection and events\r\n         */\r\n        this.init = function () {\r\n            _this.poloniex = new PoloniexProxy_1.PoloniexProxy();\r\n            /**\r\n             * Trade Event\r\n             */\r\n            _this.poloniex.on(PoloniexConstants_1.PoloniexConstants.TRADEEVENT, function (cid, sequence, message) {\r\n                var side = message[1];\r\n                if (_this.subscriptions[cid] != null) {\r\n                    var price = message[3];\r\n                    var size = message[2];\r\n                    if (side === PoloniexConstants_1.PoloniexConstants.BUY) {\r\n                        var cqMsg = MsgFactory_1.MsgFactory.buyMsg;\r\n                        cqMsg.buffer(PoloniexTransport.getMsSinceMidnight(), _this.subscriptions[cid].id, Math.trunc(price), Math.trunc(price % 1 * 10000000), Math.trunc(size), Math.trunc(size % 1 * 10000000), Math.trunc(_this.subscriptions[cid].volume), Math.trunc(_this.subscriptions[cid].volume % 1 * 10000000), MdConstant_1.MdConstant.PoloniexTransport, _this.subscriptions[cid].benchmark);\r\n                        _this.cb.on(cqMsg);\r\n                    }\r\n                    else { /* Sell */\r\n                        var cqMsg = MsgFactory_1.MsgFactory.sellMsg;\r\n                        cqMsg.buffer(PoloniexTransport.getMsSinceMidnight(), _this.subscriptions[cid].id, Math.trunc(price), Math.trunc(price % 1 * 10000000), Math.trunc(size), Math.trunc(size % 1 * 10000000), Math.trunc(_this.subscriptions[cid].volume), Math.trunc(_this.subscriptions[cid].volume % 1 * 10000000), MdConstant_1.MdConstant.PoloniexTransport, _this.subscriptions[cid].benchmark);\r\n                        _this.cb.on(cqMsg);\r\n                    }\r\n                }\r\n            });\r\n            /**\r\n             * Snapshot Event\r\n             */\r\n            _this.poloniex.on(PoloniexConstants_1.PoloniexConstants.QUOTEEVENT, function (cid, sequence, message) {\r\n                if (_this.subscriptions[cid] != null) {\r\n                    /** Level 1 Information **/\r\n                    var bidPriceStr = Object.keys(message[0].orderBook[1])[0];\r\n                    var bidSize = message[0].orderBook[1][bidPriceStr];\r\n                    var askPriceStr = Object.keys(message[0].orderBook[0])[0];\r\n                    var askSize = message[0].orderBook[0][askPriceStr];\r\n                    var bidPrice = parseFloat(bidPriceStr);\r\n                    var askPrice = parseFloat(askPriceStr);\r\n                    var cqMsg = MsgFactory_1.MsgFactory.quoteMsg;\r\n                    cqMsg.buffer(PoloniexTransport.getMsSinceMidnight(), _this.subscriptions[cid].id, Math.trunc(bidPrice), Math.trunc(bidPrice % 1 * 10000000), Math.trunc(bidSize), Math.trunc(bidSize % 1 * 10000000), Math.trunc(askPrice), Math.trunc(askPrice % 1 * 10000000), Math.trunc(askSize), Math.trunc(askSize % 1 * 10000000), MdConstant_1.MdConstant.PoloniexTransport, _this.subscriptions[cid].benchmark);\r\n                    _this.cb.on(cqMsg);\r\n                }\r\n            });\r\n            /**\r\n             * Bid and Ask events\r\n             */\r\n            _this.poloniex.on(PoloniexConstants_1.PoloniexConstants.ORDEREVENT, function (cid, sequence, message) {\r\n                if (_this.subscriptions[cid] != null) {\r\n                    var msgType = message[2] === PoloniexConstants_1.PoloniexConstants.AMOUNT_ZERO ? 1 /* Remove */ : 0 /* Modify */;\r\n                    if (msgType === 0) {\r\n                        var side = message[0];\r\n                        var rate = message[1];\r\n                        var size = message[2];\r\n                        if (side === PoloniexConstants_1.PoloniexConstants.BID) {\r\n                            if (rate > _this.subscriptions[cid].bestBid) {\r\n                                var cqMsg = MsgFactory_1.MsgFactory.bidMsg;\r\n                                _this.subscriptions[cid].bestBid = rate;\r\n                                cqMsg.buffer(PoloniexTransport.getMsSinceMidnight(), _this.subscriptions[cid].id, Math.trunc(rate), Math.trunc(rate % 1 * 10000000), Math.trunc(size), Math.trunc(size % 1 * 10000000), Math.trunc(_this.subscriptions[cid].volume), Math.trunc(_this.subscriptions[cid].volume % 1 * 10000000), MdConstant_1.MdConstant.PoloniexTransport, _this.subscriptions[cid].benchmark);\r\n                                _this.cb.on(cqMsg);\r\n                            }\r\n                        }\r\n                        else { /* Ask */\r\n                            if (rate < _this.subscriptions[cid].bestAsk) {\r\n                                var cqMsg = MsgFactory_1.MsgFactory.askMsg;\r\n                                _this.subscriptions[cid].bestAsk = rate;\r\n                                cqMsg.buffer(PoloniexTransport.getMsSinceMidnight(), _this.subscriptions[cid].id, Math.trunc(rate), Math.trunc(rate % 1 * 10000000), Math.trunc(size), Math.trunc(size % 1 * 10000000), Math.trunc(_this.subscriptions[cid].volume), Math.trunc(_this.subscriptions[cid].volume % 1 * 10000000), MdConstant_1.MdConstant.PoloniexTransport, _this.subscriptions[cid].benchmark);\r\n                                _this.cb.on(cqMsg);\r\n                            }\r\n                        }\r\n                    }\r\n                }\r\n            });\r\n            /**\r\n             * Quotes Event\r\n             */\r\n            _this.poloniex.on(PoloniexConstants_1.PoloniexConstants.TICKEREVENT, function (cid, message) {\r\n                if (_this.subscriptions[cid] != null) {\r\n                    var cqMsg = MsgFactory_1.MsgFactory.level1Msg;\r\n                    _this.subscriptions[cid].price = message[1];\r\n                    _this.subscriptions[cid].bestBid = message[3];\r\n                    _this.subscriptions[cid].bestAsk = message[2];\r\n                    _this.subscriptions[cid].volume = message[6];\r\n                    cqMsg.buffer(PoloniexTransport.getMsSinceMidnight(), _this.subscriptions[cid].id, Math.trunc(_this.subscriptions[cid].price), Math.trunc(_this.subscriptions[cid].price % 1 * 10000000), Math.trunc(_this.subscriptions[cid].bestBid), Math.trunc(_this.subscriptions[cid].bestBid % 1 * 10000000), Math.trunc(_this.subscriptions[cid].bestAsk), Math.trunc(_this.subscriptions[cid].bestAsk % 1 * 10000000), MdConstant_1.MdConstant.PoloniexTransport, _this.subscriptions[cid].benchmark);\r\n                    _this.cb.on(cqMsg);\r\n                }\r\n            });\r\n            _this.poloniex.on(PoloniexConstants_1.PoloniexConstants.ERROREVENT, function (message) {\r\n                //TODO: error log\r\n            });\r\n            _this.poloniex.on(PoloniexConstants_1.PoloniexConstants.CLOSEEVENT, function (message) {\r\n                _this._connected = false;\r\n                //TODO: error log\r\n            });\r\n            _this.poloniex.on(PoloniexConstants_1.PoloniexConstants.OPENEVENT, function (message) {\r\n                _this._connected = true;\r\n                //TODO: error log\r\n            });\r\n        };\r\n        this.cb = callback;\r\n    }\r\n    //Return the number of seconds sinsce midnight\r\n    PoloniexTransport.getMsSinceMidnight = function () {\r\n        return this.getGmtZeroNow() - this.getGmtZeroMidnight();\r\n    };\r\n    PoloniexTransport.getGmtZeroNow = function () {\r\n        var d = new Date();\r\n        var z = d.getTime() + (d.getTimezoneOffset() * 60000);\r\n        var zd = new Date(z);\r\n        return zd.getTime();\r\n    };\r\n    PoloniexTransport.getGmtZeroMidnight = function () {\r\n        var d = new Date();\r\n        var z = d.getTime() + (d.getTimezoneOffset() * 60000);\r\n        var zd = new Date(z);\r\n        zd.setHours(0);\r\n        zd.setMinutes(0);\r\n        zd.setSeconds(0);\r\n        zd.setMilliseconds(0);\r\n        return zd.getTime();\r\n    };\r\n    PoloniexTransport.prototype.isConnected = function () {\r\n        return this._connected;\r\n    };\r\n    /***\r\n     * Connect to Poloniex Transport\r\n     * @param symbols\r\n     */\r\n    PoloniexTransport.prototype.connect = function (symbols) {\r\n        this.subscribe(symbols); //Subscribe the symbols\r\n        this.init(); //Start connection\r\n    };\r\n    return PoloniexTransport;\r\n}());\r\nexports.PoloniexTransport = PoloniexTransport;\r\n"]}