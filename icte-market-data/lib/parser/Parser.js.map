{"version":3,"sources":["lib.js"],"names":["Object","exports","Constant_1","require","Parser","_0x4511d9","_0xc577ac","Buffer","_0x596a62","_0x205011","_0x1bdf91","arguments","_0x46650c","_0xd987fa","_0xb16ff6","_0x2f1939","_0x3de482","_0x24375b","_0x4f31ce","_0x2109aa","_0x3961f5"],"mappings":"AAAA,aACAA,MAAA,C,gBAAA,EAAsBC,OAAtB,C,YAAA,CAA6C,C,OAAE,C,IAAF,CAA7C,EACA,IAAIC,UAAA,CAAaC,OAAA,C,mBAAA,CAAjB,CACA,IAAIC,MAAA,CAAwB,UAAY,C,++CACpC,SAASC,SAAT,CAAgBC,SAAhB,CAAsB,CAClB,K,KAAA,EAAW,IAAIC,MAAJ,CAAWD,SAAX,CAAX,CADkB,CAGtBD,SAAA,C,WAAA,E,SAAA,EAA2B,UAAY,CACnC,OAAO,K,SAAA,EAAaH,UAAA,C,UAAA,E,UAAA,CAAb,CAAP,CADmC,CAAvC,CAGAG,SAAA,C,WAAA,E,YAAA,EAA8B,UAAY,CACtC,OAAO,K,SAAA,EAAaH,UAAA,C,UAAA,E,aAAA,CAAb,CAAP,CADsC,CAA1C,CAGAG,SAAA,C,WAAA,E,OAAA,EAAyB,SAAUG,SAAV,CAAgB,EAAzC,CAEAH,SAAA,C,WAAA,E,QAAA,EAA0B,UAAY,CAClC,IAAII,SAAA,CAAO,EAAX,CACA,IAAK,IAAIC,SAAA,C,GAAJ,C,mBAAYA,S,CAAKC,SAAA,C,QAAA,C,CAAtB,CAAwCD,SAAA,EAAxC,CAA8C,CAC1CD,SAAA,CAAKC,SAAL,EAAWC,SAAA,CAAUD,SAAV,CAAX,CAD0C,CAG9C,OAAO,K,KAAA,CAAP,CALkC,CAAtC,CAOAL,SAAA,C,WAAA,E,SAAA,EAA2B,SAAUO,SAAV,CAAkB,CACzC,OAAO,K,KAAA,E,WAAA,EAAmBA,SAAnB,CAAP,CADyC,CAA7C,CAGAP,SAAA,C,WAAA,E,UAAA,EAA4B,SAAUQ,SAAV,CAAkB,CAC1C,OAAO,K,KAAA,E,cAAA,EAAsBA,SAAtB,CAAP,CAD0C,CAA9C,CAGAR,SAAA,C,WAAA,E,QAAA,EAA0B,SAAUS,SAAV,CAAkB,CACxC,OAAO,K,KAAA,E,cAAA,EAAsBA,SAAtB,CAAP,CADwC,CAA5C,CAGAT,SAAA,C,WAAA,E,SAAA,EAA2B,SAAUU,SAAV,CAAkBC,SAAlB,CAAyB,CAChD,K,KAAA,E,YAAA,EAAoBA,SAApB,CAA2BD,SAA3B,EADgD,CAApD,CAGAV,SAAA,C,WAAA,E,UAAA,EAA4B,SAAUY,SAAV,CAAkBC,SAAlB,CAAyB,CACjD,K,KAAA,E,eAAA,EAAuBA,SAAvB,CAA8BD,SAA9B,EADiD,CAArD,CAGAZ,SAAA,C,WAAA,E,QAAA,EAA0B,SAAUc,SAAV,CAAkBC,SAAlB,CAAyB,CAC/C,K,KAAA,E,eAAA,EAAuBA,SAAvB,CAA8BD,SAA9B,EAD+C,CAAnD,CAGA,OAAOd,SAAP,CArCoC,CAAZ,EAA5B,CAuCAJ,OAAA,C,QAAA,EAAiBG,MAAjB","sourcesContent":["\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nvar Constant_1 = require(\"../model/Constant\");\r\nvar Parser = /** @class */ (function () {\r\n    function Parser(size) {\r\n        this.buf = new Buffer(size);\r\n    }\r\n    Parser.prototype.msgType = function () {\r\n        return this.getByte(Constant_1.Constant.Fld_Type);\r\n    };\r\n    Parser.prototype.msgSubtype = function () {\r\n        return this.getByte(Constant_1.Constant.Fld_SubType);\r\n    };\r\n    Parser.prototype.parse = function (view) {\r\n    };\r\n    Parser.prototype.buffer = function () {\r\n        var args = [];\r\n        for (var _i = 0; _i < arguments.length; _i++) {\r\n            args[_i] = arguments[_i];\r\n        }\r\n        return this.buf;\r\n    };\r\n    Parser.prototype.getByte = function (offset) {\r\n        return this.buf.readUInt8(offset);\r\n    };\r\n    Parser.prototype.getShort = function (offset) {\r\n        return this.buf.readUInt16BE(offset);\r\n    };\r\n    Parser.prototype.getInt = function (offset) {\r\n        return this.buf.readUInt32BE(offset);\r\n    };\r\n    Parser.prototype.setByte = function (offset, value) {\r\n        this.buf.writeUInt8(value, offset);\r\n    };\r\n    Parser.prototype.setShort = function (offset, value) {\r\n        this.buf.writeUInt16BE(value, offset);\r\n    };\r\n    Parser.prototype.setInt = function (offset, value) {\r\n        this.buf.writeUInt32BE(value, offset);\r\n    };\r\n    return Parser;\r\n}());\r\nexports.Parser = Parser;\r\n"]}